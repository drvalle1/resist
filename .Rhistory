#get y soma
tmp=unique(dat[,c('seg.id','ysoma')])
cond=!is.na(tmp$ysoma)
ysoma=tmp[cond,'ysoma']
ngibbs=1000#0
nburn=ngibbs/2
#priors
gamma1=0.1
var.betas=c(100,rep(1,ncol(xmat)-1))
n=nrow(xmat)
nparam=ncol(xmat)
nagg=length(ysoma)
#initial parameters
betas=matrix(0,nparam,ngroup)
b.gamma=2
z=sample(1:ngroup,size=nagg,replace=T)
theta=rep(1/ngroup,ngroup)
#stuff for gibbs sampler
jump1=list(betas=matrix(0.1,nparam,ngroup),b.gamma=0.1)
accept1=list(betas=matrix(0,nparam,ngroup),b.gamma=0)
store.betas=matrix(NA,ngibbs,nparam*ngroup)
store.b=matrix(NA,ngibbs,1)
store.theta=matrix(NA,ngibbs,ngroup)
store.llk=matrix(NA,ngibbs,1)
accept.output=50
for (i in 1:ngibbs){
print(i)
#sample betas
tmp=sample.betas(betas=betas,xmat=xmat,ysoma=ysoma,jump=jump1$betas,
b.gamma=b.gamma,nparam=nparam,var.betas=var.betas,
seg.id=seg.id,ngroup=ngroup,nagg=nagg,z=z)
betas=tmp$betas
accept1$betas=accept1$betas+tmp$accept
#sample b.gamma
tmp=sample.b.gamma(betas=betas,xmat=xmat,ysoma=ysoma,jump=jump1$b.gamma,
b.gamma=b.gamma,seg.id=seg.id,ngroup=ngroup,nagg=nagg,z=z)
b.gamma=tmp$b.gamma
accept1$b.gamma=accept1$b.gamma+tmp$accept
# b.gamma=b.true
#sample z
z=sample.z(betas=betas,xmat=xmat,ysoma=ysoma,b.gamma=b.gamma,
seg.id=seg.id,ngroup=ngroup,nagg=nagg,theta=theta)
#sample theta
theta=sample.theta(z=z,gamma1=gamma1,ngroup=ngroup)
#get llk
p=get.llk(betas=betas,xmat=xmat,ysoma=ysoma,b.gamma=b.gamma,
seg.id=seg.id,ngroup=ngroup,nagg=nagg)
#sum the loglikel for the correct group
llk1=GetSomaLlkGroups(llk=p, z=z-1, ngroups=ngroup)
# llk=0
# for (j in 1:ngroup){
#   cond=z==j
#   llk=llk+sum(p[cond,j])
# }
#re-order groups from time to time
if (i<nburn & i%%accept.output==0){
ind=order(theta,decreasing=T)
theta=theta[ind]
betas=betas[,ind]
jump1$betas=jump1$betas[,ind]
z1=rep(NA,length(z))
for (k in 1:ngroup){
cond=z==ind[k]
z1[cond]=k
}
z=z1
}
#adaptation MH algorithm
if (i<nburn & i%%accept.output==0){
k=print.adapt(accept1z=accept1,jump1z=jump1,accept.output=accept.output)
accept1=k$accept1
jump1=k$jump1
}
#store results
store.betas[i,]=betas
store.b[i]=b.gamma
store.llk[i]=sum(llk1)
store.theta[i,]=theta
z.estim=z
}
par(mfrow=c(3,3),mar=c(1,1,3,1))
for (i in 1:ncol(store.betas)){
plot(store.betas[,i],type='l',main=i)
}
plot(theta,type='l')
plot(theta,type='h')
rm(list=ls())
library('Rcpp')
set.seed(111)
setwd('U:\\GIT_models\\resist')
source('gibbs_resist.R')
source('gibbs_resist_func.R')
sourceCpp('resist_aux.cpp')
dat=read.csv('fake data.csv',as.is=T)
ind=grep('cov',colnames(dat))
xmat=data.matrix(cbind(1,dat[,ind]))
seg.id=dat$seg.id
ngroup=10
#get y soma
tmp=unique(dat[,c('seg.id','ysoma')])
cond=!is.na(tmp$ysoma)
ysoma=tmp[cond,'ysoma']
ngibbs=10000
nburn=ngibbs/2
#priors
gamma1=0.1
var.betas=c(100,rep(1,ncol(xmat)-1))
mod.res=gibbs_resist(ysoma=ysoma,xmat=xmat,seg.id=seg.id,ngroup=ngroup,
ngibbs=ngibbs,nburn=nburn,var.betas=var.betas,
gamma1=gamma1)
store.llk=mod.res$llk
store.b=mod.res$b.gamma
store.betas=mod.res$betas
z.estim=mod.res$z.estim
plot(store.llk,type='l')
nburn=1000
abline(v=nburn,col='red')
plot(store.llk[nburn:ngibbs],type='l')
nburn=2000
abline(v=nburn,col='red')
plot(store.llk[nburn:ngibbs],type='l')
nburn=3000
abline(v=nburn,col='red')
plot(store.llk[nburn:ngibbs],type='l')
plot(store.b,type='l')
plot(store.b[nburn:ngibbs],type='l')
par(mfrow=c(3,3),mar=rep(1,4))
ind=sample(1:ncol(store.betas),size=9)
for (i in 1:9) plot(store.betas[1:ngibbs,ind[i]],type='l')
for (i in 1:9) plot(store.betas[nburn:ngibbs,ind[i]],type='l')
fim=data.frame(z.estim=z.estim,z.true=z.true)
tab1=table(fim); tab1
set.seed(111)
setwd('U:\\GIT_models\\resist')
n=50000
nparam=4
xmat=matrix(runif(n*nparam,min=-1.5,max=1.5),n,nparam)
nomes.cov=paste0('covs',1:nparam)
colnames(xmat)=nomes.cov
n=nrow(xmat)
ngroup=5
betas.true=betas=matrix(c(-1,0 ,1,-1,0,
1,0 ,1,-1,1,
-1,-1,0, 0,0,
0, 0,-1,1,1),nparam+1,ngroup,byrow=T)
media=exp(cbind(1,xmat)%*%betas); range(round(media,3))
b.true=b=4
a=b*media
ymat=matrix(rgamma(n*ngroup,a,b),n,ngroup); range(ymat)
fim=as.data.frame(xmat)
fim$z=NA
fim$ysoma=NA
fim$seg.id=NA
#aggregate these data
ind=floor(c(seq(from=1,to=n,by=n/1000),n+1)) #has to include 1 and n to use all observations
for (i in 2:length(ind)){
seq1=ind[i-1]:(ind[i]-1)
n=length(seq1)
fim$seg.id[seq1]=i-1
z=sample(1:ngroup,size=1)
fim$z[ind[i]-1]=z
ysoma=ymat[seq1,z]
fim$ysoma[ind[i]-1]=sum(ysoma)
}
max(fim$seg.id)
length(unique(fim$seg.id))
#get z.true
tmp=unique(fim[,c('z','seg.id')])
z.true=tmp[!is.na(tmp$z),'z']
table(z.true)
fim=data.frame(z.estim=z.estim,z.true=z.true)
tab1=table(fim); tab1
ordem=numeric()
for (i in 1:ncol(tab1)){
ind=which(tab1[,i]==max(tab1[,i]))
ordem=c(ordem,ind)
}
tab1[ordem,]
#look at betas
ngroup=10
par(mfrow=c(1,1),mar=rep(3,4))
betas.estim=matrix(store.betas[ngibbs,],ncol(store.betas)/ngroup,ngroup)
rango=range(c(betas.estim,betas.true))
plot(betas.true,betas.estim[,ordem],xlim=rango,ylim=rango)
lines(rango,rango,col='red')
ngroup=10
par(mfrow=c(1,1),mar=rep(3,4))
betas.estim=matrix(store.betas[ngibbs,],ncol(store.betas)/ngroup,ngroup)
rango=range(c(betas.estim[,ordem],betas.true))
plot(betas.true,betas.estim[,ordem],xlim=rango,ylim=rango)
lines(rango,rango,col='red')
#look at theta
theta.estim=apply(mod.res$theta[nburn:ngibbs,],2,mean)
plot(theta.estim,type='h',ylim=c(0,1))
rm(list=ls())
set.seed(111)
setwd('U:\\GIT_models\\resist')
n=50000
nparam=4
xmat=matrix(runif(n*nparam,min=-1.5,max=1.5),n,nparam)
nomes.cov=paste0('covs',1:nparam)
colnames(xmat)=nomes.cov
n=nrow(xmat)
ngroup=7
betas.true=betas=matrix(c(-1,0 ,1,-1,0,
1,0 ,1,-1,1,
-1,-1,0, 0,0,
0, 0,-1,1,1),nparam+1,ngroup,byrow=T)
media=exp(cbind(1,xmat)%*%betas); range(round(media,3))
b.true=b=4
a=b*media
ymat=matrix(rgamma(n*ngroup,a,b),n,ngroup); range(ymat)
fim=as.data.frame(xmat)
fim$z=NA
fim$ysoma=NA
fim$seg.id=NA
#aggregate these data
ind=floor(c(seq(from=1,to=n,by=n/1000),n+1)) #has to include 1 and n to use all observations
for (i in 2:length(ind)){
seq1=ind[i-1]:(ind[i]-1)
n=length(seq1)
fim$seg.id[seq1]=i-1
z=sample(1:ngroup,size=1)
fim$z[ind[i]-1]=z
ysoma=ymat[seq1,z]
fim$ysoma[ind[i]-1]=sum(ysoma)
}
max(fim$seg.id)
length(unique(fim$seg.id))
#get z.true
tmp=unique(fim[,c('z','seg.id')])
z.true=tmp[!is.na(tmp$z),'z']
table(z.true)
rm(list=ls())
set.seed(111)
setwd('U:\\GIT_models\\resist')
n=50000
nparam=4
xmat=matrix(runif(n*nparam,min=-1.5,max=1.5),n,nparam)
nomes.cov=paste0('covs',1:nparam)
colnames(xmat)=nomes.cov
n=nrow(xmat)
ngroup=6
betas.true=betas=matrix(c(-1,0 , 1,-1, 0,1,
1,0 , 1,-1, 1,0,
-1,-1, 0, 0, 0,-1
0, 0,-1, 1,-1,0),nparam+1,ngroup,byrow=T)
rm(list=ls())
set.seed(111)
setwd('U:\\GIT_models\\resist')
n=50000
nparam=4
xmat=matrix(runif(n*nparam,min=-1.5,max=1.5),n,nparam)
nomes.cov=paste0('covs',1:nparam)
colnames(xmat)=nomes.cov
n=nrow(xmat)
ngroup=7
betas.true=betas=matrix(c(-1,0 , 1,-1, 0, 1, 0,
1,0 , 1,-1, 1, 0,-1,
-1,-1, 0, 0, 0,-1, 0,
0, 0,-1, 1,-1, 0, 1),nparam+1,ngroup,byrow=T)
media=exp(cbind(1,xmat)%*%betas); range(round(media,3))
length(c(-1,0 , 1,-1, 0, 1, 0,
1,0 , 1,-1, 1, 0,-1,
-1,-1, 0, 0, 0,-1, 0,
0, 0,-1, 1,-1, 0, 1))
rm(list=ls())
set.seed(111)
setwd('U:\\GIT_models\\resist')
n=50000
nparam=3
xmat=matrix(runif(n*nparam,min=-1.5,max=1.5),n,nparam)
nomes.cov=paste0('covs',1:nparam)
colnames(xmat)=nomes.cov
n=nrow(xmat)
ngroup=7
betas.true=betas=matrix(c(-1,0 , 1,-1, 0, 1, 0,
1,0 , 1,-1, 1, 0,-1,
-1,-1, 0, 0, 0,-1, 0,
0, 0,-1, 1,-1, 0, 1),nparam+1,ngroup,byrow=T)
media=exp(cbind(1,xmat)%*%betas); range(round(media,3))
rm(list=ls())
set.seed(111)
setwd('U:\\GIT_models\\resist')
n=50000
nparam=3
xmat=matrix(runif(n*nparam,min=-1.5,max=1.5),n,nparam)
nomes.cov=paste0('covs',1:nparam)
colnames(xmat)=nomes.cov
n=nrow(xmat)
ngroup=7
betas.true=betas=matrix(c(-1,0 , 1,-1, 0, 1, 0,
1,0 , 1,-1, 1, 0,-1,
-1,-1, 0, 0, 0,-1, 0,
0, 0,-1, 1,-1, 0, 1),nparam+1,ngroup,byrow=T)
media=exp(cbind(1,xmat)%*%betas); range(round(media,3))
b.true=b=1
a=b*media
ymat=matrix(rgamma(n*ngroup,a,b),n,ngroup); range(ymat)
fim=as.data.frame(xmat)
fim$z=NA
fim$ysoma=NA
fim$seg.id=NA
#aggregate these data
ind=floor(c(seq(from=1,to=n,by=n/1000),n+1)) #has to include 1 and n to use all observations
for (i in 2:length(ind)){
seq1=ind[i-1]:(ind[i]-1)
n=length(seq1)
fim$seg.id[seq1]=i-1
z=sample(1:ngroup,size=1)
fim$z[ind[i]-1]=z
ysoma=ymat[seq1,z]
fim$ysoma[ind[i]-1]=sum(ysoma)
}
max(fim$seg.id)
length(unique(fim$seg.id))
#get z.true
tmp=unique(fim[,c('z','seg.id')])
z.true=tmp[!is.na(tmp$z),'z']
table(z.true)
#export results
ind=which(colnames(fim)=='z')
setwd('U:\\GIT_models\\resist')
write.csv(fim[,-ind],'fake data.csv',row.names=F)
rm(list=ls())
library('Rcpp')
set.seed(111)
setwd('U:\\GIT_models\\resist')
source('gibbs_resist.R')
source('gibbs_resist_func.R')
sourceCpp('resist_aux.cpp')
dat=read.csv('fake data.csv',as.is=T)
ind=grep('cov',colnames(dat))
xmat=data.matrix(cbind(1,dat[,ind]))
seg.id=dat$seg.id
ngroup=10
#get y soma
tmp=unique(dat[,c('seg.id','ysoma')])
cond=!is.na(tmp$ysoma)
ysoma=tmp[cond,'ysoma']
ngibbs=10000
nburn=ngibbs/2
#priors
gamma1=0.1
var.betas=c(100,rep(1,ncol(xmat)-1))
mod.res=gibbs_resist(ysoma=ysoma,xmat=xmat,seg.id=seg.id,ngroup=ngroup,
ngibbs=ngibbs,nburn=nburn,var.betas=var.betas,
gamma1=gamma1)
rm(list=ls())
library('Rcpp')
set.seed(121)
setwd('U:\\GIT_models\\resist')
source('gibbs_resist.R')
source('gibbs_resist_func.R')
sourceCpp('resist_aux.cpp')
dat=read.csv('fake data.csv',as.is=T)
ind=grep('cov',colnames(dat))
xmat=data.matrix(cbind(1,dat[,ind]))
seg.id=dat$seg.id
ngroup=10
#get y soma
tmp=unique(dat[,c('seg.id','ysoma')])
cond=!is.na(tmp$ysoma)
ysoma=tmp[cond,'ysoma']
ngibbs=10000
nburn=ngibbs/2
#priors
gamma1=0.1
var.betas=c(100,rep(1,ncol(xmat)-1))
mod.res=gibbs_resist(ysoma=ysoma,xmat=xmat,seg.id=seg.id,ngroup=ngroup,
ngibbs=ngibbs,nburn=nburn,var.betas=var.betas,
gamma1=gamma1)
rm(list=ls())
set.seed(131)
setwd('U:\\GIT_models\\resist')
n=50000
nparam=3
xmat=matrix(runif(n*nparam,min=-1.5,max=1.5),n,nparam)
nomes.cov=paste0('covs',1:nparam)
colnames(xmat)=nomes.cov
n=nrow(xmat)
ngroup=7
betas.true=betas=matrix(c(-1,0 , 1,-1, 0, 1, 0,
1,0 , 1,-1, 1, 0,-1,
-1,-1, 0, 0, 0,-1, 0,
0, 0,-1, 1,-1, 0, 1),nparam+1,ngroup,byrow=T)
media=exp(cbind(1,xmat)%*%betas); range(round(media,3))
b.true=b=1
a=b*media
ymat=matrix(rgamma(n*ngroup,a,b),n,ngroup); range(ymat)
fim=as.data.frame(xmat)
fim$z=NA
fim$ysoma=NA
fim$seg.id=NA
#aggregate these data
ind=floor(c(seq(from=1,to=n,by=n/1000),n+1)) #has to include 1 and n to use all observations
for (i in 2:length(ind)){
seq1=ind[i-1]:(ind[i]-1)
n=length(seq1)
fim$seg.id[seq1]=i-1
z=sample(1:ngroup,size=1)
fim$z[ind[i]-1]=z
ysoma=ymat[seq1,z]
fim$ysoma[ind[i]-1]=sum(ysoma)
}
max(fim$seg.id)
length(unique(fim$seg.id))
#get z.true
tmp=unique(fim[,c('z','seg.id')])
z.true=tmp[!is.na(tmp$z),'z']
table(z.true)
#export results
ind=which(colnames(fim)=='z')
setwd('U:\\GIT_models\\resist')
write.csv(fim[,-ind],'fake data.csv',row.names=F)
rm(list=ls())
library('Rcpp')
set.seed(121)
setwd('U:\\GIT_models\\resist')
source('gibbs_resist.R')
source('gibbs_resist_func.R')
sourceCpp('resist_aux.cpp')
dat=read.csv('fake data.csv',as.is=T)
ind=grep('cov',colnames(dat))
xmat=data.matrix(cbind(1,dat[,ind]))
seg.id=dat$seg.id
ngroup=10
#get y soma
tmp=unique(dat[,c('seg.id','ysoma')])
cond=!is.na(tmp$ysoma)
ysoma=tmp[cond,'ysoma']
ngibbs=10000
nburn=ngibbs/2
#priors
gamma1=0.1
var.betas=c(100,rep(1,ncol(xmat)-1))
mod.res=gibbs_resist(ysoma=ysoma,xmat=xmat,seg.id=seg.id,ngroup=ngroup,
ngibbs=ngibbs,nburn=nburn,var.betas=var.betas,
gamma1=gamma1)
store.llk=mod.res$llk
store.b=mod.res$b.gamma
store.betas=mod.res$betas
z.estim=mod.res$z.estim
#look at overall convergence
plot(store.llk,type='l')
nburn=3000
abline(v=nburn,col='red')
plot(store.llk[nburn:ngibbs],type='l')
plot(store.b,type='l')
plot(store.b[nburn:ngibbs],type='l')
par(mfrow=c(3,3),mar=rep(1,4))
ind=sample(1:ncol(store.betas),size=9)
for (i in 1:9) plot(store.betas[1:ngibbs,ind[i]],type='l')
for (i in 1:9) plot(store.betas[nburn:ngibbs,ind[i]],type='l')
fim=data.frame(z.estim=z.estim,z.true=z.true)
tab1=table(fim); tab1
set.seed(131)
setwd('U:\\GIT_models\\resist')
n=50000
nparam=3
xmat=matrix(runif(n*nparam,min=-1.5,max=1.5),n,nparam)
nomes.cov=paste0('covs',1:nparam)
colnames(xmat)=nomes.cov
n=nrow(xmat)
ngroup=7
betas.true=betas=matrix(c(-1,0 , 1,-1, 0, 1, 0,
1,0 , 1,-1, 1, 0,-1,
-1,-1, 0, 0, 0,-1, 0,
0, 0,-1, 1,-1, 0, 1),nparam+1,ngroup,byrow=T)
media=exp(cbind(1,xmat)%*%betas); range(round(media,3))
b.true=b=1
a=b*media
ymat=matrix(rgamma(n*ngroup,a,b),n,ngroup); range(ymat)
fim=as.data.frame(xmat)
fim$z=NA
fim$ysoma=NA
fim$seg.id=NA
#aggregate these data
ind=floor(c(seq(from=1,to=n,by=n/1000),n+1)) #has to include 1 and n to use all observations
for (i in 2:length(ind)){
seq1=ind[i-1]:(ind[i]-1)
n=length(seq1)
fim$seg.id[seq1]=i-1
z=sample(1:ngroup,size=1)
fim$z[ind[i]-1]=z
ysoma=ymat[seq1,z]
fim$ysoma[ind[i]-1]=sum(ysoma)
}
max(fim$seg.id)
length(unique(fim$seg.id))
#get z.true
tmp=unique(fim[,c('z','seg.id')])
z.true=tmp[!is.na(tmp$z),'z']
table(z.true)
fim=data.frame(z.estim=z.estim,z.true=z.true)
tab1=table(fim); tab1
ordem=numeric()
for (i in 1:ncol(tab1)){
ind=which(tab1[,i]==max(tab1[,i]))
ordem=c(ordem,ind)
}
tab1[ordem,]
#look at betas
ngroup=10
par(mfrow=c(1,1),mar=rep(3,4))
betas.estim=matrix(store.betas[ngibbs,],ncol(store.betas)/ngroup,ngroup)
rango=range(c(betas.estim[,ordem],betas.true))
plot(betas.true,betas.estim[,ordem],xlim=rango,ylim=rango)
lines(rango,rango,col='red')
#look at theta
theta.estim=apply(mod.res$theta[nburn:ngibbs,],2,mean)
plot(theta.estim,type='h',ylim=c(0,1))
